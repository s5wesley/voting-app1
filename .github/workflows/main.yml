on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure the entire repo is checked out

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose unzip wget jq

      - name: Verify docker-compose.yaml exists
        run: ls -l voting-app/  # Check if the file exists

      - name: Pull necessary images
        run: |
          docker pull postgres:alpine
          docker pull redis:alpine
          docker pull dockersamples/examplevotingapp_vote
          docker pull dockersamples/examplevotingapp_worker
          docker pull dockersamples/examplevotingapp_result

      - name: Build and run the application
        run: |
          cd voting-app  # Navigate to the directory containing the docker-compose.yaml
          docker-compose up -d  # Start the application in detached mode

      - name: Wait for the application to be ready
        run: sleep 30  # Give the application time to start

      - name: Install Ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin/

      - name: Setup Ngrok authtoken
        run: ngrok authtoken ${{ secrets.NGROK_TOKEN }}

      - name: Start Ngrok tunnel
        run: |
          nohup ngrok http 5000 > ngrok.log 2>&1 &
          sleep 10  # Allow time for Ngrok to establish the tunnel
          echo "Ngrok tunnel started. Log snippet:"
          head -n 10 ngrok.log

      - name: Display public URL
        run: |
          echo "Fetching Ngrok public URL..."
          curl --silent http://127.0.0.1:4040/api/tunnels | jq
